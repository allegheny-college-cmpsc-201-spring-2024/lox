name: GatorGrader

permissions:
  contents: write

on:
  push:
    branches: [10-classes]

jobs:
  grade:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - name: Setup Maven
      if: always()
      run: |
        sudo apt-get install default-jre
        sudo apt-get install default-jdk
        sudo apt-get install maven
    - name: Setup Python
      if: always()
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.6
    - name: Set up grading environment
      run: |
        sudo apt-get update
        sudo python -m pip install --upgrade pip
        sudo python -m pip install gatorgrade --ignore-installed PyYAML
      if: always()
    - name: Grade repository
      run: |
        gatorgrade --config gatorgrade.yml --report file json gatorgrade_summary.json
        export JSON_REPORT=$(cat gatorgrade_summary.json)
      if: always()
      env:
        PIPENV_VENV_IN_PROJECT: 1
        PIPENV_IGNORE_VIRTUALENVS: 1
    - name: Create Wizard report
      id: wizard
      uses: term-world/wizard@v0.7.4
      with:
        grader-report: 'gatorgrade_summary.json'
        report-name: '10 - Classes'
      if: always()
    # Get the current time
    - name: Get the Current Time
      uses: josStorer/get-current-time@v2
      if: always()
      id: current-time
      with:
        format: YYYYMMDD-HH-mm-ss
        utcOffset: "-05:00"
    # Write the collected GatorGrade data to the designated branch
    - name: Write Collected Data to Designated Branch
      uses: GatorEducator/BranchWrite@v1.0.1
      if: always()
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        branch: insight
        path: insight/insight-report-${{steps.current-time.outputs.formattedTime}}.json
        source: env
        source-arg: JSON_REPORT
    env:
      GITHUB_TOKEN: ${{ secrets.WIZARD }}
